const mysql = require('mysql2');
const fs = require('fs');
const path = require('path');

async function setupDatabase() {
  let connection;
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ prepared statements
    connection = mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '', // —É–∫–∞–∂–∏ –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      multipleStatements: true // –†–∞–∑—Ä–µ—à–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    });

    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL...');

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connection.connect();

    // –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await new Promise((resolve, reject) => {
      connection.query('CREATE DATABASE IF NOT EXISTS it_company', (error) => {
        if (error) reject(error);
        else {
          console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö it_company —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');
          resolve();
        }
      });
    });

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await new Promise((resolve, reject) => {
      connection.query('USE it_company', (error) => {
        if (error) reject(error);
        else {
          console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö it_company');
          resolve();
        }
      });
    });

    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª —Å —Å—Ö–µ–º–æ–π
    const schemaPath = path.join(__dirname, 'database', 'schema.sql');
    const schemaSQL = fs.readFileSync(schemaPath, 'utf8');

    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ—Å—å SQL —Å–∫—Ä–∏–ø—Ç
    await new Promise((resolve, reject) => {
      connection.query(schemaSQL, (error, results) => {
        if (error) reject(error);
        else {
          console.log('‚úÖ –í—Å–µ SQL –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
          resolve(results);
        }
      });
    });

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    console.log('üìä –¢–∞–±–ª–∏—Ü—ã: users, services, orders, portfolio');
    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    
  } finally {
    if (connection) {
      connection.end();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  setupDatabase();
}

module.exports = setupDatabase;